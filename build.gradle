
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:2.2.0.RELEASE')
    }
}


plugins {
    id 'org.springframework.boot' version '2.2.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}


apply plugin: 'java'
//apply plugin: 'io.spring.dependency-management'
//apply plugin: "org.springframework.boot"

//apply plugin: "idea"

group = 'com.mendix.csv'
version = '0.0.27'
sourceCompatibility = '1.8'

configurations {
//	compileOnly {
//		extendsFrom annotationProcessor
//	}

    all*.exclude module: 'spring-boot-starter-logging'

    //runtime.exclude group: "org.slf4j", module: "slf4j-log4j12"
    runtime.exclude group: 'io.netty', module: 'netty'
    runtime.exclude group: 'io.netty', module: 'netty-all'
    //compile.exclude group: "org.slf4j", module: "slf4j-log4j12"
    compile.exclude group: 'io.netty', module: 'netty'
    compile.exclude group: 'io.netty', module: 'netty-all'
}

//bootJar {
//	baseName = 'acoes-coletivas-cs-service'
//	version =  '0.1.0'
//}


repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://repo.spring.io/release' }
    maven { url 'https://repo.spring.io/snapshot' }
    maven { url 'https://repo.spring.io/milestone' }
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

dependencies {

    //implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.springframework.boot:spring-boot-starter-tomcat'

    compile('org.springframework.boot:spring-boot-starter') {
        exclude module: 'spring-boot-starter-logging'
    }

    compile('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-logging'
    }


    implementation('org.springframework.boot:spring-boot-starter-web-services') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
       // exclude module: 'spring-boot-starter-logging'
    }

    implementation('org.springframework.ws:spring-ws-core') {
        //exclude module: 'spring-boot-starter-logging'
    }

    implementation 'org.glassfish.jaxb:jaxb-runtime'
    //jaxb 'com.sun.xml.bind:jaxb-xjc:2.2.7-b41'
    //jaxb 'com.sun.xml.bind:jaxb-impl:2.2.7-b41'
    //jaxb 'javax.xml.bind:jaxb-api:2.2.7'

    implementation 'org.codehaus.janino:commons-compiler:3.0.8'

    implementation 'org.codehaus.janino:janino:3.0.8'

    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.30.1'

    compile group: 'com.opencsv', name: 'opencsv', version: '3.8'

    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

    compile group: 'br.com.caelum.stella', name: 'caelum-stella-core', version: '2.1.2'

    compile(group: 'org.apache.spark', name: 'spark-core_2.11', version: '2.3.0')
            {
                //exclude group: 'org.slf4j', module: 'slf4j-simple'
                exclude group: 'org.eclipse.jetty', module: 'jetty-server'
                exclude group: 'com.sun.jersey', module: 'jersey-server'
                exclude group: 'com.sun.jersey', module: 'jetty-core'
                exclude group: 'org.eclipse.jetty.orbit', module: 'javax.servlet'
                exclude group: 'io.netty', module: 'netty'
                exclude group: 'io.netty', module: 'netty-all'
                //exclude group: 'org.eclipse.jetty', module: 'jetty-server'
            }

    compile(group: 'org.apache.spark', name: 'spark-sql_2.11', version: '2.3.0')
            {
                //exclude group: 'org.slf4j', module: 'slf4j-simple'
                exclude group: 'org.eclipse.jetty', module: 'jetty-server'
                exclude group: 'com.sun.jersey', module: 'jersey-server'
                exclude group: 'com.sun.jersey', module: 'jetty-core'
                exclude group: 'org.eclipse.jetty.orbit', module: 'javax.servlet'
                //exclude group: 'org.eclipse.jetty', module: 'jetty-server'
            }


    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}


sourceSets {

    main.resources.srcDirs += "src/main/resources"
    main {
        resources {
            srcDirs "src/main/resources", "src/main/configs"
        }
    }

}


jar {
    into 'resources', {
        from 'resources'
    }
}


task copyResources(type: Copy) {
    from "${projectDir}/src/main/resources"
    into "${buildDir}/classes/java/main/resources"
}
processResources.dependsOn copyResources

test {
    useJUnitPlatform()
}

